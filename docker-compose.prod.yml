services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: news-app-prod
        restart: unless-stopped
        ports:
            - "80:80"
        environment:
            - APP_ENV=production
            - APP_DEBUG=false
        volumes:
            - .:/var/www/html
        networks:
            - news-network-prod
        depends_on:
            - mysql
            - redis

    mysql:
        image: mysql:8.0
        container_name: news-mysql-prod
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        volumes:
            - mysql_prod_data:/var/lib/mysql
            - ./docker/mysql/conf.d:/etc/mysql/conf.d
        networks:
            - news-network-prod

    redis:
        image: redis:7-alpine
        container_name: news-redis-prod
        restart: unless-stopped
        command: redis-server --appendonly yes
        volumes:
            - redis_prod_data:/data
        networks:
            - news-network-prod

networks:
    news-network-prod:
        driver: bridge

volumes:
    mysql_prod_data:
        driver: local
    redis_prod_data:
        driver: local
